from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from bot.utils import db
from datetime import datetime

router = Router()

@router.message(F.text == "üìÇ –ú–µ–Ω—ñ“£ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä—ã–º")
async def show_my_ads(message: Message):
    user_ads = await db.get_user_ads_from_db(message.from_user.id)
    if not user_ads:
        await message.answer("–°—ñ–∑ ”ô–ª—ñ –±—ñ—Ä–¥–µ-–±—ñ—Ä –±–µ–ª—Å–µ–Ω–¥—ñ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É –±–µ—Ä–≥–µ–Ω –∂–æ“õ—Å—ã–∑.")
        return

    response = "<b>üìÇ –°—ñ–∑–¥—ñ“£ –±–µ–ª—Å–µ–Ω–¥—ñ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä—ã“£—ã–∑:</b>\n\n"
    for ad in user_ads:
        # ad: (title, price, created_at, expires_at)
        expires_at_dt = datetime.fromisoformat(ad[3])
        days_left = (expires_at_dt - datetime.now()).days
        response += (
            f"<b>{ad[0]}</b>\n"
            f"<i>–ë–∞“ì–∞—Å—ã:</i> {ad[1]}\n"
            f"<i>–ú–µ—Ä–∑—ñ–º—ñ –±—ñ—Ç–µ–¥—ñ:</i> <b>{days_left} –∫“Ø–Ω–Ω–µ–Ω —Å–æ“£</b> ({expires_at_dt.strftime('%d.%m.%Y')})\n"
            f"-------------------\n"
        )
    await message.answer(response)

# –•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É –º–µ—Ä–∑—ñ–º—ñ–Ω “±–∑–∞—Ä—Ç—É —Ö–µ–Ω–¥–ª–µ—Ä—ñ
@router.callback_query(F.data.startswith("extend_"))
async def extend_ad_handler(callback: CallbackQuery):
    ad_id = int(callback.data.split("_")[1])
    await db.extend_ad(ad_id)
    await callback.message.edit_text(
        "‚úÖ –•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É—ã“£—ã–∑–¥—ã“£ –º–µ—Ä–∑—ñ–º—ñ —Å”ô—Ç—Ç—ñ —Ç“Ø—Ä–¥–µ —Ç–∞“ì—ã 7 –∫“Ø–Ω–≥–µ “±–∑–∞—Ä—Ç—ã–ª–¥—ã!"
    )
    await callback.answer("–°”ô—Ç—Ç—ñ “±–∑–∞—Ä—Ç—ã–ª–¥—ã!")