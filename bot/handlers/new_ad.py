from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from bot.states.new_ad_states import NewAdStates
from bot.keyboards.category_kb import get_category_kb
from bot.keyboards.confirm_kb import get_confirmation_kb
from bot.utils import db

router = Router()

# 1. "–ñ–∞“£–∞ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É" –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—É
@router.message(F.text == "üìù –ñ–∞“£–∞ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É")
async def new_ad_start(message: Message, state: FSMContext):
    await state.set_state(NewAdStates.waiting_for_category)
    await message.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=get_category_kb())

# 2. –ö–∞—Ç–µ–≥–æ—Ä–∏—è–Ω—ã —Ç–∞“£–¥–∞—É
@router.callback_query(NewAdStates.waiting_for_category, F.data.startswith("cat_"))
async def category_selected(callback: CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[1]
    await state.update_data(category=category)
    await state.set_state(NewAdStates.waiting_for_title)
    await callback.message.edit_text(f"–¢–∞“£–¥–∞–ª“ì–∞–Ω –∫–∞—Ç–µ–≥–æ—Ä–∏—è: <b>{category}</b>\n\n–ï–Ω–¥—ñ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–¥—ã“£ —Ç–∞“õ—ã—Ä—ã–±—ã–Ω –∂–∞–∑—ã“£—ã–∑ (–º—ã—Å–∞–ª—ã, 'iPhone 13 —Å–∞—Ç–∞–º—ã–Ω'):")
    await callback.answer()

# 3. –¢–∞“õ—ã—Ä—ã–ø—Ç—ã –µ–Ω–≥—ñ–∑—É
@router.message(NewAdStates.waiting_for_title)
async def title_entered(message: Message, state: FSMContext):
    await state.update_data(title=message.text)
    await state.set_state(NewAdStates.waiting_for_description)
    await message.answer("–¢–∞–º–∞—à–∞! –ï–Ω–¥—ñ —Å–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã–Ω –∂–∞–∑—ã“£—ã–∑ (–∂–∞“ì–¥–∞–π—ã, –µ—Ä–µ–∫—à–µ–ª—ñ–∫—Ç–µ—Ä—ñ, —Ç.–±.):")

# 4. –°–∏–ø–∞—Ç—Ç–∞–º–∞–Ω—ã –µ–Ω–≥—ñ–∑—É
@router.message(NewAdStates.waiting_for_description)
async def description_entered(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await state.set_state(NewAdStates.waiting_for_price)
    await message.answer("–ï–Ω–¥—ñ –±–∞“ì–∞—Å—ã–Ω –∂–∞–∑—ã“£—ã–∑ (–º—ã—Å–∞–ª—ã, '150000 —Ç–≥' –Ω–µ–º–µ—Å–µ '–∫–µ–ª—ñ—Å—ñ–º–¥—ñ'):")

# 5. –ë–∞“ì–∞–Ω—ã –µ–Ω–≥—ñ–∑—É
@router.message(NewAdStates.waiting_for_price)
async def price_entered(message: Message, state: FSMContext):
    await state.update_data(price=message.text)
    await state.set_state(NewAdStates.waiting_for_contact)
    await message.answer("–ë–∞–π–ª–∞–Ω—ã—Å “Ø—à—ñ–Ω –Ω”©–º—ñ—Ä—ñ“£—ñ–∑–¥—ñ –Ω–µ–º–µ—Å–µ Telegram –Ω–∏–≥—ñ“£—ñ–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑:")

# 6. –ë–∞–π–ª–∞–Ω—ã—Å—Ç—ã –µ–Ω–≥—ñ–∑—É
@router.message(NewAdStates.waiting_for_contact)
async def contact_entered(message: Message, state: FSMContext):
    await state.update_data(contact=message.text)
    await state.set_state(NewAdStates.waiting_for_photo)
    await message.answer("–°—É—Ä–µ—Ç—ñ–Ω –∂—ñ–±–µ—Ä—ñ“£—ñ–∑ –Ω–µ–º–µ—Å–µ '—Å—É—Ä–µ—Ç—Å—ñ–∑' –¥–µ–ø –∂–∞–∑—ã“£—ã–∑.")

# 7. –°—É—Ä–µ—Ç—Ç—ñ –µ–Ω–≥—ñ–∑—É
@router.message(NewAdStates.waiting_for_photo)
async def photo_entered(message: Message, state: FSMContext):
    if message.photo:
        await state.update_data(photo=message.photo[-1].file_id)
    else:
        await state.update_data(photo=None)

    data = await state.get_data()
    user_info = await db.get_user(message.from_user.id)
    city = user_info[4] # selected_city
    await state.update_data(city=city, user_id=message.from_user.id)

    # –•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–¥—ã –∞–ª–¥—ã–Ω –∞–ª–∞ –∫”©—Ä—Å–µ—Ç—É
    ad_text = (
        f"<b>{data['title']}</b>\n\n"
        f"<b>–°–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã:</b> {data['description']}\n"
        f"<b>–ë–∞“ì–∞—Å—ã:</b> {data['price']}\n\n"
        f"<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {data['category']}\n"
        f"<b>“ö–∞–ª–∞:</b> {city}\n"
        f"<b>–ë–∞–π–ª–∞–Ω—ã—Å:</b> {data['contact']}"
    )

    await state.set_state(NewAdStates.waiting_for_confirmation)
    if data.get('photo'):
        await message.answer_photo(photo=data['photo'], caption=f"–¢–µ–∫—Å–µ—Ä—ñ–ø —à—ã“ì—ã“£—ã–∑:\n\n{ad_text}", reply_markup=get_confirmation_kb())
    else:
        await message.answer(f"–¢–µ–∫—Å–µ—Ä—ñ–ø —à—ã“ì—ã“£—ã–∑:\n\n{ad_text}", reply_markup=get_confirmation_kb())

# 8. –†–∞—Å—Ç–∞—É
@router.callback_query(NewAdStates.waiting_for_confirmation, F.data == "confirm_ad_yes")
async def ad_confirmed(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await db.add_ad_to_db(data)
    await callback.message.edit_text("‚úÖ –°—ñ–∑–¥—ñ“£ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É—ã“£—ã–∑ —Å”ô—Ç—Ç—ñ –∂–∞—Ä–∏—è–ª–∞–Ω–¥—ã!")
    await state.clear()
    await callback.answer()

@router.callback_query(NewAdStates.waiting_for_confirmation, F.data == "confirm_ad_no")
async def ad_cancelled(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text("‚ùå –•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É –∂–∞—Ä–∏—è–ª–∞–Ω–±–∞–¥—ã.")
    await callback.answer()